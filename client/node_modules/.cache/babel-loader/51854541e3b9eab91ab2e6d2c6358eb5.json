{"ast":null,"code":"var _jsxFileName = \"/Users/ayon/Desktop/project-web-dev/project-BrainFlix/tasdeed-aziz-brainflix/src/App.js\";\nimport React, { Component } from \"react\";\nimport Video from \"./components/Video/Video\";\nimport Bio from \"./components/Bio/Bio\";\nimport SideVideos from \"./components/SideVideos/SideVideos\";\nimport Comment from \"./components/Comment/Comment\";\nimport Commentlst from \"./components/CommentList/CommentList\";\nimport { API_URL, API_KEY, changeDate } from \"./Utils\";\nimport \"./App.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedVideo: null,\n      videos: []\n    };\n\n    this.getVideoDetails = videoID => {\n      axios.get(`${API_URL}/${videoID}?api_key=${API_KEY}`).then(videoDetails => {\n        this.setState({\n          selectedVideo: videoDetails.data\n        });\n      });\n    };\n\n    this.getAllVideos = () => {\n      axios.get(`${API_URL}?api_key=${API_KEY}`).then(videoResult => {\n        this.setState({\n          videos: videoResult.data\n        }); //default video id\n\n        const firstVideo = this.state.videos[0].id;\n        const currentvideoId = this.props.match.params.videoId; // Condition to show the video thats been selected on main page\n        // and stay on the page\n\n        const showVideoId = currentvideoId ? currentvideoId : firstVideo;\n\n        if (!showVideoId) {\n          return this.getVideoDetails(this.state.videos[0].id);\n        } else {\n          this.getVideoDetails(showVideoId);\n        }\n      });\n    };\n  }\n\n  // Component mount function\n  componentDidMount() {\n    //this.getVideoDetails(\"1af0jruup5gu\");\n    this.getAllVideos();\n  } //Component update function to update the page with\n  //current selected video\n\n\n  componentDidUpdate(previousID) {\n    const currentVideo = this.props.match.params.videoId;\n    const previousVideo = previousID.match.params.videoId;\n\n    if (currentVideo !== previousVideo) {\n      this.getVideoDetails(currentVideo);\n    }\n  }\n\n  render() {\n    if (!this.state.selectedVideo) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait, this page is loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    } //Filter out the selected video from side videolist\n\n\n    const filteredVideo = this.state.selectedVideo ? this.state.videos.filter(vid => vid.id !== this.state.selectedVideo.id) : this.state.videos;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(Video, {\n            video: this.state.selectedVideo,\n            date: changeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bio, {\n            text: this.state.selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Commentlst, {\n            comment: this.state.selectedVideo,\n            date: changeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(SideVideos, {\n            videoList: filteredVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ayon/Desktop/project-web-dev/project-BrainFlix/tasdeed-aziz-brainflix/src/App.js"],"names":["React","Component","Video","Bio","SideVideos","Comment","Commentlst","API_URL","API_KEY","changeDate","axios","App","state","selectedVideo","videos","getVideoDetails","videoID","get","then","videoDetails","setState","data","getAllVideos","videoResult","firstVideo","id","currentvideoId","props","match","params","videoId","showVideoId","componentDidMount","componentDidUpdate","previousID","currentVideo","previousVideo","render","filteredVideo","filter","vid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Video from \"./components/Video/Video\";\nimport Bio from \"./components/Bio/Bio\";\nimport SideVideos from \"./components/SideVideos/SideVideos\";\nimport Comment from \"./components/Comment/Comment\";\nimport Commentlst from \"./components/CommentList/CommentList\";\nimport { API_URL, API_KEY, changeDate } from \"./Utils\";\nimport \"./App.scss\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  //creating the empty states\n  state = {\n    selectedVideo: null,\n    videos: [],\n  };\n\n  //Function to get the video and comments with id parameter\n\n  getVideoDetails = (videoID) => {\n    axios\n      .get(`${API_URL}/${videoID}?api_key=${API_KEY}`)\n      .then((videoDetails) => {\n        this.setState({\n          selectedVideo: videoDetails.data,\n        });\n      });\n  };\n\n  //Fucntion to get all video data without the comment {sideVideoList}\n  //then pass the id to the getVideo function to get the\n  //details and display it on main page when selected.\n\n  getAllVideos = () => {\n    axios.get(`${API_URL}?api_key=${API_KEY}`).then((videoResult) => {\n      this.setState({\n        videos: videoResult.data,\n      });\n\n      //default video id\n      const firstVideo = this.state.videos[0].id;\n\n      const currentvideoId = this.props.match.params.videoId;\n\n      // Condition to show the video thats been selected on main page\n      // and stay on the page\n\n      const showVideoId = currentvideoId ? currentvideoId : firstVideo;\n\n      if (!showVideoId) {\n        return this.getVideoDetails(this.state.videos[0].id);\n      } else {\n        this.getVideoDetails(showVideoId);\n      }\n    });\n  };\n\n  // Component mount function\n\n  componentDidMount() {\n    //this.getVideoDetails(\"1af0jruup5gu\");\n    this.getAllVideos();\n  }\n\n  //Component update function to update the page with\n  //current selected video\n\n  componentDidUpdate(previousID) {\n    const currentVideo = this.props.match.params.videoId;\n    const previousVideo = previousID.match.params.videoId;\n\n    if (currentVideo !== previousVideo) {\n      this.getVideoDetails(currentVideo);\n    }\n  }\n\n  render() {\n    if (!this.state.selectedVideo) {\n      return <p>Please wait, this page is loading...</p>;\n    }\n\n    //Filter out the selected video from side videolist\n\n    const filteredVideo = this.state.selectedVideo\n      ? this.state.videos.filter(\n          (vid) => vid.id !== this.state.selectedVideo.id\n        )\n      : this.state.videos;\n\n    return (\n      <main>\n        <div className=\"main\">\n          <div className=\"left\">\n            <Video video={this.state.selectedVideo} date={changeDate} />\n            <Bio text={this.state.selectedVideo} />\n            <Comment />\n            <Commentlst comment={this.state.selectedVideo} date={changeDate} />\n          </div>\n          <div className=\"right\">\n            <SideVideos videoList={filteredVideo} />\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}